条件变量通过允许线程阻塞和等待另一个线程发送信号的方法弥补了互斥锁的不足．
条件变量内部就是一个等待队列，放置等待的线程，线程在条件变量上等待和通知，互斥锁用来保护等待队列（对等待队列上锁），条件变量通常和互斥锁一起使用．
条件变量允许线程等待特定条件发生，当条件不满足时，线程通常先进入阻塞状态，等待条件发生变化，当条件不满足时，线程通常先进入阻塞状态，等待条件发生变化．
一旦其它的某个线程改变了条件，可唤醒一个或多个阻塞的线程（条件需要开发人员设置）
条件变量数据类型：ptrhead_cond_t

总结：条件变量需要和互斥锁一起使用，互斥锁用来锁等待队列

wait函数内部的执行的流程：
１．unlock；//释放锁（释放在你要插入的共享资源的锁）
２．lock;将线程自己插入到条件变量的等待队列中
３．unlcok;当前等待的线程阻塞<=====其他线程通知唤醒(broadcase/signal)
４．在唤醒后，调用lock(&mutex);这里也可能阻塞，原因别的线程也占用这个锁你需要别的线程把这把锁释放
５．从等待队列中删除线程自己
总结：所以wait前后的锁不是一对.
